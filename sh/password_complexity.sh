#!/bin/bash

# 설정 값 기준
required_lcredit=-1
required_ucredit=-1
required_dcredit=-1
required_ocredit=-1
required_minlen=8
required_difok='N'

check_common_password() {
    local content
    if [[ -f /etc/pam.d/common-password ]]; then
        content=$(cat /etc/pam.d/common-password)
        lcredit=$(echo "$content" | grep -oP 'lcredit=\K-?\d+')
        ucredit=$(echo "$content" | grep -oP 'ucredit=\K-?\d+')
        dcredit=$(echo "$content" | grep -oP 'dcredit=\K-?\d+')
        ocredit=$(echo "$content" | grep -oP 'ocredit=\K-?\d+')
        minlen=$(echo "$content" | grep -oP 'minlen=\K\d+')
        difok=$(echo "$content" | grep -oP 'difok=\K\S+')

        echo "common_password_lcredit=$lcredit"
        echo "common_password_ucredit=$ucredit"
        echo "common_password_dcredit=$dcredit"
        echo "common_password_ocredit=$ocredit"
        echo "common_password_minlen=$minlen"
        echo "common_password_difok=$difok"
    else
        echo "common_password_lcredit=None"
        echo "common_password_ucredit=None"
        echo "common_password_dcredit=None"
        echo "common_password_ocredit=None"
        echo "common_password_minlen=None"
        echo "common_password_difok=None"
    fi
}

check_pwquality_conf() {
    local content
    if [[ -f /etc/security/pwquality.conf ]]; then
        content=$(cat /etc/security/pwquality.conf)
        lcredit=$(echo "$content" | grep -oP 'lcredit\s*=\s*\K-?\d+')
        ucredit=$(echo "$content" | grep -oP 'ucredit\s*=\s*\K-?\d+')
        dcredit=$(echo "$content" | grep -oP 'dcredit\s*=\s*\K-?\d+')
        ocredit=$(echo "$content" | grep -oP 'ocredit\s*=\s*\K-?\d+')
        minlen=$(echo "$content" | grep -oP 'minlen\s*=\s*\K\d+')
        difok=$(echo "$content" | grep -oP 'difok\s*=\s*\K\S+')

        echo "pwquality_lcredit=$lcredit"
        echo "pwquality_ucredit=$ucredit"
        echo "pwquality_dcredit=$dcredit"
        echo "pwquality_ocredit=$ocredit"
        echo "pwquality_minlen=$minlen"
        echo "pwquality_difok=$difok"
    else
        echo "pwquality_lcredit=None"
        echo "pwquality_ucredit=None"
        echo "pwquality_dcredit=None"
        echo "pwquality_ocredit=None"
        echo "pwquality_minlen=None"
        echo "pwquality_difok=None"
    fi
}

check_login_defs() {
    if [[ -f /etc/login.defs ]]; then
        minlen=$(grep -oP 'PASS_MIN_LEN\s*\K\d+' /etc/login.defs)
        echo "login_defs_minlen=$minlen"
    else
        echo "login_defs_minlen=None"
    fi
}

assess_password_complexity() {
    local common_minlen
    local pwquality_minlen
    local login_defs_minlen
    local current_minlen
    local minlen_matched

    # 설정 파일로부터 값 읽어오기
    common_minlen=$(echo "$common_password_settings" | grep -oP 'common_password_minlen=\K\S+')
    pwquality_minlen=$(echo "$pwquality_settings" | grep -oP 'pwquality_minlen=\K\S+')
    login_defs_minlen=$(echo "$login_defs_minlen" | grep -oP 'login_defs_minlen=\K\S+')

    # minlen 설정 비교
    if [[ "$common_minlen" != "None" ]]; then
        current_minlen=$common_minlen
        source='common-password'
    elif [[ "$pwquality_minlen" != "None" ]]; then
        current_minlen=$pwquality_minlen
        source='pwquality.conf'
    elif [[ "$login_defs_minlen" != "None" ]]; then
        current_minlen=$login_defs_minlen
        source='login.defs'
    else
        current_minlen=None
        source=None
    fi

    if [[ "$current_minlen" != "None" ]]; then
        echo "패스워드 최소 길이 적용 기준: $source"
        if [[ $current_minlen -ge $required_minlen ]]; then
            echo "minlen 설정: 양호 (기대값: $required_minlen, 현재값: $current_minlen)"
            minlen_matched=true
        else
            echo "minlen 설정: 취약 (기대값: $required_minlen, 현재값: $current_minlen)"
            minlen_matched=false
        fi
    else
        echo "패스워드 최소 길이 설정: 취약 (설정 없음)"
        minlen_matched=false
    fi

    # 패스워드 복잡성 평가
    local all_matched=true

    # 우선 순위에 따라 설정 적용
    if [[ "$common_password_settings" != "None" ]]; then
        current_settings="$common_password_settings"
        source='common-password'
    elif [[ "$pwquality_settings" != "None" ]]; then
        current_settings="$pwquality_settings"
        source='pwquality.conf'
    elif [[ "$login_defs_minlen" != "None" ]]; then
        current_settings="login_defs_minlen=$login_defs_minlen"
        source='login.defs'
    else
        echo "패스워드 복잡성 적용: 취약 (설정 없음)"
        return
    fi

    echo "패스워드 복잡성 적용 기준: $source"

    # 모든 필수 항목에 대해 설정 값 확인
    for key in lcredit ucredit dcredit ocredit; do
        current_value=$(echo "$current_settings" | grep -oP "${source}_${key}=\K\S+")
        if [[ "$current_value" != "None" ]]; then
            if [[ $current_value -ne $required_$key ]]; then
                echo "$key 설정: 취약 (기대값: ${!required_$key}, 현재값: $current_value)"
                all_matched=false
            else
                echo "$key 설정: 양호"
            fi
        else
            echo "$key 설정: 취약 (설정 없음)"
            all_matched=false
        fi
    done

    if $minlen_matched && $all_matched; then
        echo "[양호] 패스워드 복잡성"
    else
        echo "[취약] 패스워드 복잡성"
    fi
}

# 메인 함수
echo "======================= U-02 패스워드 복잡성 ========================="
common_password_settings=$(check_common_password)
pwquality_settings=$(check_pwquality_conf)
login_defs_minlen=$(check_login_defs)

assess_password_complexity "$common_password_settings" "$pwquality_settings" "$login_defs_minlen"
