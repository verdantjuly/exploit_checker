#!/bin/bash

# 설정 값 기준
lcredit_required=-1
ucredit_required=-1
dcredit_required=-1
ocredit_required=-1
minlen_required=8
difok_required="N"

# 설정 파일 경로
system_auth="/etc/pam.d/system-auth"
pwquality_conf="/etc/security/pwquality.conf"
login_defs="/etc/login.defs"

# 설정 값 추출 함수
extract_system_auth() {
    if [[ -f $system_auth ]]; then
        minlen=$(grep -oP 'minlen=\K\d+' $system_auth)
        minclass=$(grep -oP 'minclass=\K\d+' $system_auth)
        if [[ -n $minlen && -n $minclass ]]; then
            echo "system-auth:$minlen:$minclass"
            return 0
        fi
    fi
    return 1
}

extract_pwquality_conf() {
    if [[ -f $pwquality_conf ]]; then
        lcredit=$(grep -oP 'lcredit\s*=\s*\K-?\d+' $pwquality_conf)
        ucredit=$(grep -oP 'ucredit\s*=\s*\K-?\d+' $pwquality_conf)
        dcredit=$(grep -oP 'dcredit\s*=\s*\K-?\d+' $pwquality_conf)
        ocredit=$(grep -oP 'ocredit\s*=\s*\K-?\d+' $pwquality_conf)
        minlen=$(grep -oP 'minlen\s*=\s*\K\d+' $pwquality_conf)
        difok=$(grep -oP 'difok\s*=\s*\K\S+' $pwquality_conf)
        if [[ -n $lcredit && -n $ucredit && -n $dcredit && -n $ocredit && -n $minlen && -n $difok ]]; then
            echo "pwquality.conf:$lcredit:$ucredit:$dcredit:$ocredit:$minlen:$difok"
            return 0
        fi
    fi
    return 1
}

extract_login_defs() {
    if [[ -f $login_defs ]]; then
        minlen=$(grep -oP 'PASS_MIN_LEN\s*\K\d+' $login_defs)
        if [[ -n $minlen ]]; then
            echo "login.defs:$minlen"
            return 0
        fi
    fi
    return 1
}

# 우선순위 결정 및 검사
check_password_complexity() {
    local settings source
    if settings=$(extract_system_auth); then
        source="system-auth"
    elif settings=$(extract_pwquality_conf); then
        source="pwquality.conf"
    elif settings=$(extract_login_defs); then
        source="login.defs"
    else
        echo "패스워드 복잡성 적용: 취약 (설정 없음)"
        return
    fi

    IFS=':' read -r -a parts <<< "$settings"
    case $source in
        "system-auth")
            minlen=${parts[1]}
            minclass=${parts[2]}
            echo "패스워드 복잡성 적용 기준: $source"
            if [[ $minlen -ge $minlen_required && $minclass -ge 1 ]]; then
                echo "minlen 설정: 양호"
                echo "minclass 설정: 양호"
                echo "[양호] 패스워드 복잡성"
            else
                echo "minlen 설정: 취약 (기대값: $minlen_required, 현재값: $minlen)"
                echo "minclass 설정: 취약 (기대값: 1, 현재값: $minclass)"
                echo "[취약] 패스워드 복잡성"
            fi
            ;;
        "pwquality.conf")
            lcredit=${parts[1]}
            ucredit=${parts[2]}
            dcredit=${parts[3]}
            ocredit=${parts[4]}
            minlen=${parts[5]}
            difok=${parts[6]}
            echo "패스워드 복잡성 적용 기준: $source"
            all_matched=true
            if [[ $lcredit -ne $lcredit_required ]]; then
                echo "lcredit 설정: 취약 (기대값: $lcredit_required, 현재값: $lcredit)"
                all_matched=false
            else
                echo "lcredit 설정: 양호"
            fi
            if [[ $ucredit -ne $ucredit_required ]]; then
                echo "ucredit 설정: 취약 (기대값: $ucredit_required, 현재값: $ucredit)"
                all_matched=false
            else
                echo "ucredit 설정: 양호"
            fi
            if [[ $dcredit -ne $dcredit_required ]]; then
                echo "dcredit 설정: 취약 (기대값: $dcredit_required, 현재값: $dcredit)"
                all_matched=false
            else
                echo "dcredit 설정: 양호"
            fi
            if [[ $ocredit -ne $ocredit_required ]]; then
                echo "ocredit 설정: 취약 (기대값: $ocredit_required, 현재값: $ocredit)"
                all_matched=false
            else
                echo "ocredit 설정: 양호"
            fi
            if [[ $minlen -lt $minlen_required ]]; then
                echo "minlen 설정: 취약 (기대값: $minlen_required, 현재값: $minlen)"
                all_matched=false
            else
                echo "minlen 설정: 양호"
            fi
            if [[ $difok != $difok_required ]]; then
                echo "difok 설정: 취약 (기대값: $difok_required, 현재값: $difok)"
                all_matched=false
            else
                echo "difok 설정: 양호"
            fi
            if $all_matched; then
                echo "[양호] 패스워드 복잡성"
            else
                echo "[취약] 패스워드 복잡성"
            fi
            ;;
        "login.defs")
            minlen=${parts[1]}
            echo "패스워드 복잡성 적용 기준: $source"
            if [[ $minlen -ge $minlen_required ]]; then
                echo "minlen 설정: 양호"
                echo "[양호] 패스워드 복잡성"
            else
                echo "minlen 설정: 취약 (기대값: $minlen_required, 현재값: $minlen)"
                echo "[취약] 패스워드 복잡성"
            fi
            ;;
    esac
}

# 스크립트 실행
check_password_complexity
