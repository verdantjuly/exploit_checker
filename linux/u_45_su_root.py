import subprocess
import re
import utils.auth_checker

GROUP_PATH = "/etc/group"
ACCOUNT_PATH = "/etc/passwd"
SU_PATH = "/etc/pam.d/su"

def check_wheel_group():
    try:
        with open(GROUP_PATH, 'r') as file:
            content = file.read()

        wheel_pattern = r'wheel.*'
        match = re.search(wheel_pattern, content)
        if match:
            part = match.group(0)
            chunks = part.split(':')
       
            return chunks[-1].split(",") 
        return []
              
    except FileNotFoundError:
        print(f"       파일이 존재하지 않습니다: {GROUP_PATH}")
    except Exception as e:
        print(f"       파일을 읽는 중 오류 발생: {e}")

import re

def check_root():
    try:
        with open(ACCOUNT_PATH, 'r') as file:
            content = file.read()
        
        root_pattern = r'^root.*$'
        root_matches = re.findall(root_pattern, content, re.MULTILINE)
        
        all_lines = content.splitlines()
        
        if set(root_matches) == set(all_lines):
            return "only_root"
        else:
            return ""
              
    except FileNotFoundError:
        print(f"파일이 존재하지 않습니다: {ACCOUNT_PATH}")
    except Exception as e:
        print(f"파일을 읽는 중 오류 발생: {e}")


def check_config():
    try:
        with open(SU_PATH, 'r') as file:
            content = file.read()

        auth_pattern = r'auth\s+required\s+/lib/security/pam_wheel\.so\s+.*'
        match = re.search(auth_pattern, content)
        if match:
            
            if "debug group=wheel" in content:
                print("[양호] root 계정 su 제한이 설정되어 있습니다.")
            elif "use_id" in content:
                print("[양호] root 계정 su 제한이 설정되어 있습니다.")
            else:
                print("[취약] root 계정 su 제한이 설정되어 있지 않습니다.")
        else:
            print("[취약] root 계정 su 제한이 설정되어 있지 않습니다.")

    except FileNotFoundError:
        print(f"       파일이 존재하지 않습니다: {SU_PATH}")
    except Exception as e:
        print(f"       파일을 읽는 중 오류 발생: {e}")

def main():
    print("")
    print("======================= U-45 root 계정 su 제한 =========================")
    if check_root() == "only_root":
        print("[양호] root 계정만을 사용하여 su 제한이 설정이 필요 없습니다.")
        return
    auth_string = utils.auth_checker.main("/bin/su")
    if auth_string != "-rwsr-x---":
        print("[취약] root 계정 su 제한이 설정되어 있지 않습니다.")
        return 
    if len(check_wheel_group()) > 0:
        check_config()
        return 

        
       
            


