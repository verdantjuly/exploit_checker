import os
import subprocess
import platform

def search_config_file(file_path, search_pattern):
    if not os.path.isfile(file_path):
        print(f"    File not found: {file_path}")
        return False

    try:
        with open(file_path, 'r') as file:
            for line in file:
          
                if line.strip().startswith('#'):
                    continue
                if search_pattern in line:
                    return True
    except Exception as e:
        print(f"    Error reading file {file_path}: {e}")
    return False

def main():
    os_type = platform.system()
    if not os_type:
        return

    config_files = {
        'SunOS': '/etc/default/login',     
        'Linux': {
            'pam_file': '/etc/pam.d/login',  
            'securetty_file': '/etc/securetty' 
        },
        'AIX': '/etc/security/user',       
        'HP-UX': '/etc/securetty'    
    }

    search_patterns = {
        'SunOS': 'CONSOLE=/dev/console',
        'Linux': {
            'pam_pattern': 'auth required /lib/security/pam_securetty.so',
            'securetty_pattern': 'pts'
        },
        'AIX': 'rlogin = false',
        'HP-UX': 'console'
    }

    if os_type in config_files:
        if os_type == 'Linux':
            pam_file = config_files['Linux']['pam_file']
            securetty_file = config_files['Linux']['securetty_file']
            pam_pattern = search_patterns['Linux']['pam_pattern']
            securetty_pattern = search_patterns['Linux']['securetty_pattern']

            # Check pam file
            if search_config_file(pam_file, pam_pattern):
                print(f"[양호] root 계정 원격 접속 제한 : Linux configuration found in {pam_file}: {pam_pattern}")
            else:
                print(f"[취약] root 계정 원격 접속 제한 : Linux configuration not found in {pam_file}.")

            # Check securetty file
            if search_config_file(securetty_file, securetty_pattern):
                print(f"[취약] root 계정 원격 접속 제한 (pts) : pts Linux configuration found in {securetty_file}: {securetty_pattern}")
            else:
                print(f"[양호] root 계정 원격 접속 제한 (pts) : pts Linux configuration not found in {securetty_file}.")

        else:
            config_file = config_files[os_type]
            pattern = search_patterns[os_type]
            if search_config_file(config_file, pattern):
                print(f"[양호] root 계정 원격 접속 제한 : {os_type} configuration found: {pattern}")
            else:
                print(f"[취약] root 계정 원격 접속 제한 : {os_type} configuration not found.")
    else:
        print(f"    Unknown OS: {os_type}")



